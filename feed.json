{"title":"努力，奋斗","description":null,"language":"zh-CN","link":"https://shang.at","pubDate":"Thu, 23 Jul 2020 01:08:29 GMT","lastBuildDate":"Thu, 23 Jul 2020 01:15:37 GMT","generator":"hexo-generator-json-feed","webMaster":"王尚","items":[{"title":"大数据-aws","link":"https://shang.at/post/大数据-aws/","description":"简介：","pubDate":"Thu, 23 Jul 2020 01:08:29 GMT","guid":"https://shang.at/post/大数据-aws/","category":"大数据"},{"title":"Python学习-文件操作","link":"https://shang.at/post/Python学习-文件操作/","description":"简介：","pubDate":"Wed, 22 Jul 2020 03:24:24 GMT","guid":"https://shang.at/post/Python学习-文件操作/","category":"Python"},{"title":"操作系统-网络的配置","link":"https://shang.at/post/操作系统-网络的配置/","description":"简介：本例中以CentOS 7举例说明如何设置Linux开机自动获取IP地址和设置固定IP地址。","pubDate":"Wed, 15 Jul 2020 14:24:58 GMT","guid":"https://shang.at/post/操作系统-网络的配置/","category":"操作系统"},{"title":"工具使用-UML","link":"https://shang.at/post/工具使用-UML/","description":"简介：统一建模语言（Unified Modeling Language，缩写UML），是非专利的第三代建模和规约语言。UML是一种开放的方法，用于说明、可视化、构建和编写一个正在开发的、面向对象的、软件密集系统的制品的开放方法。","pubDate":"Wed, 15 Jul 2020 03:36:56 GMT","guid":"https://shang.at/post/工具使用-UML/","category":"工具使用"},{"title":"Java学习-设计模式","link":"https://shang.at/post/Java学习-设计模式/","description":"简介：Java中23种设计模式，分为创建型、结构型和行为型","pubDate":"Tue, 14 Jul 2020 09:26:40 GMT","guid":"https://shang.at/post/Java学习-设计模式/","category":"JAVA学习"},{"title":"虚拟机-Docker","link":"https://shang.at/post/虚拟机-Docker/","description":"简介：","pubDate":"Mon, 13 Jul 2020 23:36:10 GMT","guid":"https://shang.at/post/虚拟机-Docker/","category":"虚拟机"},{"title":"操作系统-CentOS7上的开发环境配置","link":"https://shang.at/post/操作系统-CentOS7上的开发环境配置/","description":"简介：在Centos上进行开发的环境搭建","pubDate":"Mon, 13 Jul 2020 14:02:29 GMT","guid":"https://shang.at/post/操作系统-CentOS7上的开发环境配置/","category":"Centos开发环境"},{"title":"操作系统-CentOS7时区设置","link":"https://shang.at/post/操作系统-CentOS7时区设置/","description":"简介：","pubDate":"Sat, 04 Jul 2020 14:20:22 GMT","guid":"https://shang.at/post/操作系统-CentOS7时区设置/","category":"centos7时区设置"},{"title":"Linux-ssh","link":"https://shang.at/post/Linux-ssh/","description":"简介：","pubDate":"Sat, 04 Jul 2020 14:13:25 GMT","guid":"https://shang.at/post/Linux-ssh/","category":"Linux"},{"title":"Python学习-deque","link":"https://shang.at/post/Python学习-deque/","description":"简介：","pubDate":"Thu, 02 Jul 2020 15:52:28 GMT","guid":"https://shang.at/post/Python学习-deque/","category":"Python"},{"title":"数据结构与算法-单调栈和窗口及其更新结构","link":"https://shang.at/post/数据结构与算法-单调栈和窗口及其更新结构/","description":"简介：","pubDate":"Thu, 02 Jul 2020 11:07:20 GMT","guid":"https://shang.at/post/数据结构与算法-单调栈和窗口及其更新结构/","category":"数据结构与算法"},{"title":"Python学习-标准库学习","link":"https://shang.at/post/Python学习-标准库学习/","description":"简介：","pubDate":"Wed, 01 Jul 2020 09:17:07 GMT","guid":"https://shang.at/post/Python学习-标准库学习/","category":"Python"},{"title":"Python学习-itertools","link":"https://shang.at/post/Python学习-itertools/","description":"简介：","pubDate":"Wed, 01 Jul 2020 09:16:51 GMT","guid":"https://shang.at/post/Python学习-itertools/","category":"Python"},{"title":"Spark应用-大数据集的处理","link":"https://shang.at/post/Spark应用-大数据集的处理/","description":"简介：在spark上处理超大数据集的时候，有时候需要与外界系统进行交互或者需要将大数据量导出，下面讲解几种较方便的方案","pubDate":"Wed, 01 Jul 2020 09:12:03 GMT","guid":"https://shang.at/post/Spark应用-大数据集的处理/","category":"Spark应用"},{"title":"Python学习-类的特殊方法","link":"https://shang.at/post/Python学习-类的特殊方法/","description":"简介：通过定义具有特殊名称的方法，类可以实现某些通过特殊语法调用的操作（例如算术运算或下标和切片）。这是Python运算符重载的方法，它允许类针对语言运算符定义自己的行为。例如，如果一个类定义了一个名为__getitem__()的方法，并且x是该类的实例，则x[i]大致等效于type(x).__getitem__(x, i)。除非另有说明，否则当未定义适当的方法（通常为AttributeError或TypeError）时，尝试执行操作会引发异常。 将特殊方法设置为None表示相应的操作不可用。例如，如果一个类将__iter__()设置为None，则该类不可迭代，因此在其实例上调用iter()会引发TypeError（而不会回到__getitem__()）。 默认情况下，我们自定义的类，它的这些特殊方法都有默认的实现。","pubDate":"Wed, 01 Jul 2020 02:22:24 GMT","guid":"https://shang.at/post/Python学习-类的特殊方法/","category":"Python"},{"title":"Java学习-JMH","link":"https://shang.at/post/Java学习-JMH/","description":"简介：本节学习Java准测试工具套件-JMH","pubDate":"Tue, 30 Jun 2020 15:13:41 GMT","guid":"https://shang.at/post/Java学习-JMH/","category":"JAVA学习"},{"title":"算法-动态规划","link":"https://shang.at/post/算法-动态规划/","description":"简介：动态规划是高级的算法思想，本节主要记录DP的分析思路","pubDate":"Mon, 29 Jun 2020 17:54:22 GMT","guid":"https://shang.at/post/算法-动态规划/","category":"数据结构与算法"},{"title":"Python学习-python3.6-dict有序且效率更高","link":"https://shang.at/post/Python学习-python3-6-dict有序且效率更高/","description":"https://www.cnblogs.com/xieqiankun/p/python_dict.html","pubDate":"Sun, 28 Jun 2020 23:22:42 GMT","guid":"https://shang.at/post/Python学习-python3-6-dict有序且效率更高/","category":"Python"},{"title":"Hadoop学习","link":"https://shang.at/post/Hadoop学习/","description":"简介：","pubDate":"Fri, 26 Jun 2020 16:34:48 GMT","guid":"https://shang.at/post/Hadoop学习/","category":"Hadoop学习"},{"title":"Hadoop学习-Yarn-Scheduler","link":"https://shang.at/post/Hadoop学习-Yarn-Scheduler/","description":"","pubDate":"Thu, 25 Jun 2020 06:24:45 GMT","guid":"https://shang.at/post/Hadoop学习-Yarn-Scheduler/","category":"Hadoop学习"},{"title":"Hadoop学习-Yarn-Container","link":"https://shang.at/post/Hadoop学习-Yarn-Container/","description":"","pubDate":"Thu, 25 Jun 2020 06:24:29 GMT","guid":"https://shang.at/post/Hadoop学习-Yarn-Container/","category":"Hadoop学习"},{"title":"Hadoop学习-如何实现一个在Yarn上的Application","link":"https://shang.at/post/Hadoop学习-如何实现一个在Yarn上的Application/","description":"","pubDate":"Thu, 25 Jun 2020 01:27:51 GMT","guid":"https://shang.at/post/Hadoop学习-如何实现一个在Yarn上的Application/","category":"Hadoop学习"},{"title":"Hadoop学习-Mapreduce编程模式","link":"https://shang.at/post/Hadoop学习-Mapreduce编程模式/","description":"","pubDate":"Thu, 25 Jun 2020 01:26:50 GMT","guid":"https://shang.at/post/Hadoop学习-Mapreduce编程模式/","category":"Hadoop学习"},{"title":"Hive学习-安装","link":"https://shang.at/post/Hive学习-安装/","description":"配置过程 mysql 安装 配置可以远程连接 jdbc driver hive使用的jdbc drive要与mysql的版本匹配 hive配置 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&lt;!-- hive-site.xml --&gt;&lt;configuration&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt; &lt;value&gt;jdbc:mysql://hostmachine:3306/metastore?createDatabaseIfNotExist=true&lt;/value&gt; &lt;description&gt;the URL of the MySQL database&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt; &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt; &lt;value&gt;hive&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt; &lt;value&gt;hive1234&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;datanucleus.autoCreateSchema&lt;/name&gt; &lt;value&gt;true&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;datanucleus.fixedDatastore&lt;/name&gt; &lt;value&gt;true&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;datanucleus.autoStartMechanism&lt;/name&gt; &lt;value&gt;SchemaTable&lt;/value&gt; &lt;/property&gt; &lt;!-- 配置数据存放在hdfs上的路径 --&gt; &lt;property&gt; &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt; &lt;value&gt;/user/hive/warehouse&lt;/value&gt; &lt;/property&gt; &lt;!-- 配置metastore service 的节点 --&gt; &lt;property&gt; &lt;name&gt;hive.metastore.uris&lt;/name&gt; &lt;value&gt;thrift://node2:9083&lt;/value&gt; &lt;description&gt;IP address (or fully-qualified domain name) and port of the metastore host&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;hive.metastore.schema.verification&lt;/name&gt; &lt;value&gt;true&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 启动过程 首先启动hdfs：start-dfs.sh 初始化metestore：schematool --dbType mysql --initSchema 启动metastore service：hive --service metastore 启动hive：hive https://www.jianshu.com/p/6108e0aed204","pubDate":"Wed, 24 Jun 2020 07:41:54 GMT","guid":"https://shang.at/post/Hive学习-安装/","category":"Hive学习"},{"title":"数据库-mysql-环境配置","link":"https://shang.at/post/数据库-mysql-环境配置/","description":"platform：MAC 安装1234567891011121314brew istall mysqlWe've installed your MySQL database without a root password. To secure it run: mysql_secure_installationMySQL is configured to only allow connections from localhost by defaultTo connect run: mysql -urootTo have launchd start mysql now and restart at login: brew services start mysqlOr, if you don't want/need a background service you can just run: mysql.server start 新安装的mysql，需要重置密码： The initial root account may or may not have a password. Choose whichever of the following procedures applies: If the root account exists with an initial random password that has been expired, connect to the server as root using that password, then choose a new password. This is the case if the data directory was initialized using mysqld —initialize, either manually or using an installer that does not give you the option of specifying a password during the install operation. Because the password exists, you must use it to connect to the server. But because the password is expired, you cannot use the account for any purpose other than to choose a new password, until you do choose one. If you do not know the initial random password, look in the server error log. Connect to the server as root using the password: 12shell&gt; mysql -u root -p Enter password: (enter the random root password here) Choose a new password to replace the random password: mysql&gt; ALTER USER ‘root’@’localhost’ IDENTIFIED BY ‘root-password’; If the root account exists but has no password, connect to the server as root using no password, then assign a password. This is the case if you initialized the data directory using mysqld —initialize-insecure. Connect to the server as root using no password: 1shell&gt; mysql -u root --skip-password Assign a password: 1mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'root-password'; After assigning the root account a password, you must supply that password whenever you connect to the server using the account. For example, to connect to the server using the mysql client, use this command: 12shell&gt; mysql -u root -p Enter password: (enter root password here) To shut down the server with mysqladmin, use this command: 12shell&gt; mysqladmin -u root -p shutdown Enter password: (enter root password here) 设置远程访问设置my.cnf使用brew 安装的mysql，my.cnf文件在/usr/local/etc/my.cnf，修改bind-address为0.0.0.0，然后重启brew services restart mysql 创建用户，赋予权限1234567891011121314# 登录mysqlmysql -u root -p 123456# 创建新用户create user 'hive' identified by 'hive1234';# 授权grant all privileges on *.* to 'hive'@'%' with grant option;# *.* 前边的*号指的是数据库，后面的*号指的是表，*.*的意思就是任意数据库下的任意表# 'root'@'%'，'root'用户名，'%'任意的主机名。# 这条配置信息就是说，允许任意节点以root身份登录，并且可以访问mysql里的任意库下的任意表# 刷新flush privileges; 至此，便可以在其他host上访问mysql服务了。 其他问题 jar记得更新 server 时区","pubDate":"Wed, 24 Jun 2020 06:16:33 GMT","guid":"https://shang.at/post/数据库-mysql-环境配置/","category":"数据库"}]}